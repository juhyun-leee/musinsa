### 1) 카테고리 별 최저가격 브랜드와 상품 가격, 총액을 조회하는 API
GET http://localhost:8080/api/v1/products/categories/lowest-prices
Accept: application/json


### 2) 단일 브랜드로 모든 카테고리 상품을 구매할 때 최저가격에 판매하는 브랜드와 카테고리의 상품가격, 총액을 조회하는 API
GET http://localhost:8080/api/v1/brands/categories/lowest-price
Accept: application/json


### 3) 카테고리 이름으로 최저, 최고 가격 브랜드와 상품 가격을 조회하는 API
# .http 파일에서 한글 파라미터 요청 시 한글이 깨지는 문제가 발생하여, 각 카테고리명을 인코딩된 값으로 변경하여 요청 테스트를 합니다.
# 다른 환경 (ex. Web)에서는 정상적인 한글 파라미터가 가능하지만, .http 확장자의 파일에서만 문제가 발생합니다.
# 상의: %EC%83%81%EC%9D%98
# 아우터: %EC%95%84%EC%9A%B0%ED%84%B0
# 바지: %EB%B0%94%EC%A7%80
# 스니커즈: %EC%8A%A4%EB%8B%88%EC%BB%A4%EC%A6%88
# 가방: %EA%B0%80%EB%B0%A9
# 모자: %EB%AA%A8%EC%9E%90
# 양말: %EC%96%91%EB%A7%90
# 액세서리: %EC%95%A1%EC%84%B8%EC%84%9C%EB%A6%AC

GET http://localhost:8080/api/v1/categories/%EC%83%81%EC%9D%98
Accept: application/json


### 4) 브랜드 추가 API
POST http://localhost:8080/api/v1/brands
Content-Type: application/json

{
  "name": "J"
}


### 4) 브랜드 업데이트 API
PATCH http://localhost:8080/api/v1/brands/1
Content-Type: application/json

{
  "name": "Z"
}


### 4) 브랜드 삭제 API
DELETE http://localhost:8080/api/v1/brands/1
Content-Type: application/json


### 4) 상품 추가 API (특정 브랜드를 먼저 생성해야 합니다.)
POST http://localhost:8080/api/v1/products
Content-Type: application/json

{
  "brandId": 10,
  "categoryId": 1,
  "price": 10000
}


### 4) 상품 업데이트 API
PATCH http://localhost:8080/api/v1/products/4
Content-Type: application/json

{
  "price": 20000
}


### 4) 상품 삭제 API
DELETE http://localhost:8080/api/v1/products/2
Content-Type: application/json
